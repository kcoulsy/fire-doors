---
interface Props {
  items: Array<{
    name: string;
    url?: string;
  }>;
  currentPage: string;
}

const { items, currentPage } = Astro.props;

// Generate structured data for breadcrumbs
const breadcrumbStructuredData = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  itemListElement: [
    {
      "@type": "ListItem",
      position: 1,
      name: "Home",
      item: "https://coulsyfiredoors.co.uk",
    },
    ...items.map((item, index) => ({
      "@type": "ListItem",
      position: index + 2,
      name: item.name,
      item: item.url || `https://coulsyfiredoors.co.uk${item.url}`,
    })),
    {
      "@type": "ListItem",
      position: items.length + 2,
      name: currentPage,
      item: Astro.url.href,
    },
  ],
};
---

<nav class="bg-gray-50 border-b border-gray-200" aria-label="Breadcrumb">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between h-16">
      <div class="flex">
        <div class="flex space-x-8">
          <div
            class="inline-flex items-center px-1 pt-1 border-b-2 border-transparent text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300"
          >
            <a href="/" class="flex items-center">
              <svg
                class="flex-shrink-0 h-4 w-4"
                fill="currentColor"
                viewBox="0 0 20 20"
              >
                <path
                  d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"
                ></path>
              </svg>
              <span class="ml-2">Home</span>
            </a>
          </div>

          {
            items.map((item) => (
              <div class="inline-flex items-center px-1 pt-1 border-b-2 border-transparent text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300">
                <svg
                  class="flex-shrink-0 h-4 w-4 text-gray-400"
                  fill="currentColor"
                  viewBox="0 0 20 20"
                >
                  <path
                    fill-rule="evenodd"
                    d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                    clip-rule="evenodd"
                  />
                </svg>
                {item.url ? (
                  <a href={item.url} class="ml-2 hover:text-gray-700">
                    {item.name}
                  </a>
                ) : (
                  <span class="ml-2">{item.name}</span>
                )}
              </div>
            ))
          }

          <div
            class="inline-flex items-center px-1 pt-1 border-b-2 border-brand text-sm font-medium text-brand"
          >
            <svg
              class="flex-shrink-0 h-4 w-4 text-gray-400"
              fill="currentColor"
              viewBox="0 0 20 20"
            >
              <path
                fill-rule="evenodd"
                d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                clip-rule="evenodd"></path>
            </svg>
            <span class="ml-2">{currentPage}</span>
          </div>
        </div>
      </div>
    </div>
  </div>
</nav>

<!-- Structured Data for Breadcrumbs -->
<script
  type="application/ld+json"
  set:html={JSON.stringify(breadcrumbStructuredData)}
/>
