---
interface Review {
  author: string;
  authorPhoto: string;
  rating: number;
  text: string;
  relativeTime: string;
  publishTime: string;
}

interface ReviewsData {
  placeName: string;
  rating: number;
  totalReviews: number;
  reviews: Review[];
}
---

<section class="py-12">
  <div class="container mx-auto px-4">
    <div class="text-center mb-12">
      <h2 class="text-2xl font-bold text-gray-900 md:text-3xl">
        What Our Customers Say
      </h2>

      <p class="text-gray-500 mt-4 max-w-2xl mx-auto">
        We're proud to have earned the trust of our clients across Yorkshire.
        Here's what they have to say about working with Coulsy Fire Door
        Services.
      </p>
    </div>

    <div
      id="reviews-container"
      class="text-center text-gray-500 p-4 bg-gray-50 rounded-lg max-w-2xl mx-auto"
    >
      Loading reviews...
    </div>
  </div>
</section>

<script>
  interface Review {
    author: string;
    authorPhoto: string;
    rating: number;
    text: string;
    relativeTime: string;
    publishTime: string;
  }

  async function loadReviews() {
    const container = document.getElementById("reviews-container");
    if (!container) return;

    try {
      const response = await fetch("/api/reviews");
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const data = await response.json();

      // Check if the API returned an error
      if (data.error) {
        throw new Error(data.message);
      }

      const reviews = data.reviews?.slice(0, 7) || [];

      if (reviews.length === 0) {
        container.innerHTML =
          '<div class="text-center text-gray-500 p-4 bg-gray-50 rounded-lg max-w-2xl mx-auto">No reviews available at this time.</div>';
        return;
      }

      const reviewsHTML = reviews
        .map((review: Review) => {
          const isLongReview = review.text.length > 150;
          const truncatedText = isLongReview
            ? review.text.slice(0, 150) + "..."
            : review.text;
          const reviewId = `review-${review.author.replace(/\s+/g, "-").toLowerCase()}`;

          return `
          <div class="p-6 border border-gray-200 rounded-lg shadow-sm bg-white hover:shadow-md transition-shadow h-full flex flex-col">
            <div class="flex items-center gap-4 mb-4">
              <div>
                <div class="font-semibold text-lg">${review.author}</div>
                <div class="text-yellow-500 flex gap-1 items-center">
                  ${"â˜…".repeat(review.rating)}
                  <span class="text-gray-500 text-sm ml-2">
                    ${review.relativeTime}
                  </span>
                </div>
              </div>
            </div>
            <div class="flex-grow flex flex-col">
              <p id="${reviewId}" data-expanded="false" class="text-gray-700">
                ${truncatedText}
              </p>
              <div class="flex-grow"></div>
              ${
                isLongReview
                  ? `
                <button
                  class="mt-2 px-3 py-1 text-sm font-semibold text-blue-700 bg-blue-50 rounded hover:bg-blue-100 transition"
                  onclick="toggleReview('${reviewId}', \`${review.text.replace(/`/g, "\\`")}\`, \`${truncatedText.replace(/"/g, '\\"')}\`, this)"
                >
                  Read more
                </button>
              `
                  : ""
              }
              <a
                href="https://search.google.com/local/reviews?placeid=14482880470234072086"
                target="_blank"
                rel="noopener noreferrer"
                class="text-xs text-gray-400 hover:text-gray-600 block mt-3 text-right self-end flex items-center justify-end gap-1"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="w-4 h-4"
                  viewBox="0 0 24 24"
                  fill="currentColor"
                >
                  <path d="M21.35 11.1h-9.18v2.96h5.48c-.24 1.48-1.55 4.34-5.48 4.34-3.29 0-6-2.7-6-6s2.71-6 6-6c1.87 0 3.12.8 3.84 1.5l2.63-2.54C17.73 3.51 15.09 2 12 2 6.48 2 2 6.48 2 12s4.48 10 10 10c5.33 0 9.75-3.89 9.75-9.7 0-.65-.07-1.14-.16-1.6z" />
                </svg>
                Google
              </a>
            </div>
          </div>
        `;
        })
        .join("");

      container.innerHTML = `<div class="grid grid-cols-1 sm:grid-cols-3 xl:grid-cols-5 gap-6">${reviewsHTML}</div>`;
    } catch (e) {
      const error = e instanceof Error ? e.message : "Failed to fetch reviews";
      console.error("Error fetching reviews:", error);

      // Check if it's an API key issue - be more specific
      if (
        error.includes("API key") ||
        error.includes("REQUEST_DENIED") ||
        error.includes("expired")
      ) {
        container.innerHTML = `
          <div class="text-center p-4 bg-yellow-50 rounded-lg max-w-2xl mx-auto">
            <div class="text-yellow-800 font-semibold mb-2">Google Reviews Temporarily Unavailable</div>
            <div class="text-yellow-700 text-sm mb-4">Our Google Reviews integration is being updated. Please check our <a href="https://www.google.com/search?q=Coulsy+Fire+Door+Services+reviews" target="_blank" class="underline font-semibold">Google Reviews directly</a> for the latest customer feedback.</div>
            <div class="text-xs text-yellow-600">We're working to restore this feature as soon as possible.</div>
          </div>
        `;
      } else {
        container.innerHTML =
          '<div class="text-center text-red-500 p-4 bg-red-50 rounded-lg max-w-2xl mx-auto">Unable to load reviews at this time. Please try again later.</div>';
      }
    }
  }

  function toggleReview(
    reviewId: string,
    fullText: string,
    shortText: string,
    button: HTMLButtonElement
  ) {
    const el = document.getElementById(reviewId);
    if (!el) return;

    if (el.dataset.expanded === "true") {
      el.textContent = shortText;
      el.dataset.expanded = "false";
      button.textContent = "Read more";
    } else {
      el.textContent = fullText;
      el.dataset.expanded = "true";
      button.textContent = "Show less";
    }
  }

  // Load reviews when the page loads
  document.addEventListener("DOMContentLoaded", loadReviews);
</script>
