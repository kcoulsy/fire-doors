---
// Dark Mode Toggle Component with system preference detection
---

<button
  id="dark-mode-toggle"
  class="fixed top-4 right-4 z-50 p-3 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 shadow-lg hover:bg-white/20 transition-all duration-300 group"
  aria-label="Toggle dark mode"
>
  <!-- Sun icon (light mode) -->
  <svg
    id="sun-icon"
    class="w-6 h-6 text-yellow-500 transition-all duration-300 dark:hidden"
    fill="currentColor"
    viewBox="0 0 20 20"
  >
    <path
      fill-rule="evenodd"
      d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
      clip-rule="evenodd"></path>
  </svg>

  <!-- Moon icon (dark mode) -->
  <svg
    id="moon-icon"
    class="w-6 h-6 text-blue-400 transition-all duration-300 hidden dark:block"
    fill="currentColor"
    viewBox="0 0 20 20"
  >
    <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
    ></path>
  </svg>
</button>

<script>
  // @ts-nocheck
  class DarkModeToggle {
    constructor() {
      this.toggle = document.getElementById("dark-mode-toggle");
      this.sunIcon = document.getElementById("sun-icon");
      this.moonIcon = document.getElementById("moon-icon");
      this.init();
    }

    init() {
      // Check for saved theme preference or default to system preference
      const savedTheme = localStorage.getItem("theme");
      const systemPrefersDark = window.matchMedia(
        "(prefers-color-scheme: dark)"
      ).matches;

      if (savedTheme) {
        this.setTheme(savedTheme);
      } else {
        this.setTheme(systemPrefersDark ? "dark" : "light");
      }

      // Listen for system theme changes
      window
        .matchMedia("(prefers-color-scheme: dark)")
        .addEventListener("change", (e) => {
          if (!localStorage.getItem("theme")) {
            this.setTheme(e.matches ? "dark" : "light");
          }
        });

      // Toggle button click handler
      this.toggle?.addEventListener("click", () => {
        const currentTheme = document.documentElement.classList.contains("dark")
          ? "dark"
          : "light";
        const newTheme = currentTheme === "dark" ? "light" : "dark";
        this.setTheme(newTheme);
        localStorage.setItem("theme", newTheme);
      });

      // Add smooth transitions after initial load
      setTimeout(() => {
        document.documentElement.classList.add(
          "transition-colors",
          "duration-300"
        );
      }, 100);
    }

    setTheme(theme) {
      if (theme === "dark") {
        document.documentElement.classList.add("dark");
        this.updateIcons("dark");
      } else {
        document.documentElement.classList.remove("dark");
        this.updateIcons("light");
      }
    }

    updateIcons(theme) {
      if (theme === "dark") {
        this.sunIcon?.classList.add("hidden");
        this.moonIcon?.classList.remove("hidden");
      } else {
        this.sunIcon?.classList.remove("hidden");
        this.moonIcon?.classList.add("hidden");
      }
    }
  }

  // Initialize dark mode toggle
  document.addEventListener("DOMContentLoaded", () => {
    new DarkModeToggle();
  });
</script>

<style>
  /* Dark mode styles */
  :root {
    --bg-primary: #ffffff;
    --text-primary: #1f2937;
    --text-secondary: #6b7280;
    --border-color: #e5e7eb;
    --accent-color: #3b82f6;
  }

  .dark {
    --bg-primary: #111827;
    --text-primary: #f9fafb;
    --text-secondary: #d1d5db;
    --border-color: #374151;
    --accent-color: #60a5fa;
  }

  /* Smooth transitions for all color changes */
  * {
    transition:
      background-color 0.3s ease,
      color 0.3s ease,
      border-color 0.3s ease;
  }

  /* Dark mode specific overrides */
  .dark body {
    background-color: var(--bg-primary);
    color: var(--text-primary);
  }

  .dark .bg-white {
    background-color: #1f2937;
  }

  .dark .text-gray-900 {
    color: #f9fafb;
  }

  .dark .text-gray-600 {
    color: #d1d5db;
  }

  .dark .border-gray-200 {
    border-color: #374151;
  }

  /* Animation for toggle button */
  #dark-mode-toggle:hover {
    transform: scale(1.1);
  }

  #dark-mode-toggle:active {
    transform: scale(0.95);
  }
</style>
