---
// PWA Installer Component - Shows install prompt for eligible users
---

<div id="pwa-install-prompt" class="fixed bottom-4 left-4 right-4 md:left-auto md:right-4 md:w-80 bg-white border border-gray-200 rounded-lg shadow-lg p-4 transform translate-y-full transition-transform duration-300 z-50">
  <div class="flex items-start space-x-3">
    <!-- App Icon -->
    <div class="flex-shrink-0">
      <img src="/android-chrome-192x192.png" alt="Coulsy Fire Doors" class="w-12 h-12 rounded-lg">
    </div>
    
    <!-- Content -->
    <div class="flex-1 min-w-0">
      <h3 class="text-sm font-semibold text-gray-900">
        Install Coulsy Fire Doors
      </h3>
      <p class="text-xs text-gray-500 mt-1">
        Get quick access to fire door services, even offline
      </p>
    </div>
    
    <!-- Close Button -->
    <button id="pwa-install-close" class="flex-shrink-0 text-gray-400 hover:text-gray-600">
      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>
  </div>
  
  <!-- Action Buttons -->
  <div class="flex space-x-2 mt-3">
    <button id="pwa-install-button" class="flex-1 bg-brand hover:bg-brand-light text-white text-sm font-medium py-2 px-4 rounded-md transition-colors">
      Install
    </button>
    <button id="pwa-install-later" class="flex-1 bg-gray-100 hover:bg-gray-200 text-gray-700 text-sm font-medium py-2 px-4 rounded-md transition-colors">
      Later
    </button>
  </div>
</div>

<script is:inline>
  (function() {
    'use strict';
    
    let deferredPrompt = null;
    const installPrompt = document.getElementById('pwa-install-prompt');
    const installButton = document.getElementById('pwa-install-button');
    const installClose = document.getElementById('pwa-install-close');
    const installLater = document.getElementById('pwa-install-later');
    
    function isPWAInstalled() {
      // Check if running in standalone mode (installed)
      if (window.matchMedia && window.matchMedia('(display-mode: standalone)').matches) {
        return true;
      }
      
      // Check if running in fullscreen mode (iOS)
      if (window.navigator && window.navigator.standalone === true) {
        return true;
      }
      
      return false;
    }
    
    function showInstallPrompt() {
      // Check if user has dismissed before (7 days)
      const dismissed = localStorage.getItem('pwa-install-dismissed');
      if (dismissed) {
        const dismissedTime = parseInt(dismissed);
        const sevenDays = 7 * 24 * 60 * 60 * 1000;
        if (Date.now() - dismissedTime < sevenDays) {
          return;
        }
      }

      // Show the prompt with animation
      setTimeout(() => {
        if (installPrompt) {
          installPrompt.classList.remove('translate-y-full');
        }
      }, 2000);
    }
    
    function hideInstallPrompt() {
      if (installPrompt) {
        installPrompt.classList.add('translate-y-full');
      }
      // Remember dismissal for 7 days
      localStorage.setItem('pwa-install-dismissed', Date.now().toString());
    }
    
    async function installPWA() {
      if (!deferredPrompt) {
        console.log('No install prompt available');
        return;
      }

      try {
        // Show the install prompt
        deferredPrompt.prompt();

        // Wait for the user to respond to the prompt
        const { outcome } = await deferredPrompt.userChoice;
        
        if (outcome === 'accepted') {
          console.log('User accepted the install prompt');
        } else {
          console.log('User dismissed the install prompt');
        }
      } catch (error) {
        console.error('Error during PWA installation:', error);
      } finally {
        deferredPrompt = null;
        hideInstallPrompt();
      }
    }
    
    // Initialize
    if (!isPWAInstalled()) {
      // Listen for beforeinstallprompt event
      window.addEventListener('beforeinstallprompt', function(e) {
        e.preventDefault();
        deferredPrompt = e;
        showInstallPrompt();
      });

      // Listen for appinstalled event
      window.addEventListener('appinstalled', function() {
        hideInstallPrompt();
        deferredPrompt = null;
        console.log('PWA was installed');
      });

      // Setup event listeners
      if (installButton) {
        installButton.addEventListener('click', installPWA);
      }
      if (installClose) {
        installClose.addEventListener('click', hideInstallPrompt);
      }
      if (installLater) {
        installLater.addEventListener('click', hideInstallPrompt);
      }
    }
  })();
</script>
